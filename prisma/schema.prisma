// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Answer {
  id          Int     @id @default(autoincrement())
  answer      String
  isCorrect   Boolean  @default(true)
  userId      Int
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId  Int
  createdAt   DateTime @default(now())
}

model Question {
  id        Int    @id @default(autoincrement())
  question  String
  answers   Answer[]
  userId    Int
  set       Set @relation(fields: [setId], references: [id], onDelete: Cascade)
  setId     Int
  createdAt DateTime @default(now())
}

model Set {
  id           Int    @id @default(autoincrement())
  name         String
  subject      String?
  questions    Question[]
  public       Boolean  @default(false)
  visits       Int?
  user         User @relation(fields: [userId], references: [id], onDelete: Cascade)
  edit         String[]
  visit        String[]
  visitLink    String?
  userId       Int
  createdAt    DateTime @default(now())
}

model User {
  id                 Int         @id @default(autoincrement())
  email              String      @unique
  name               String
  refreshToken       String?
  blacklistedTokens  String[]
  sets               Set[]
  banned             Boolean @default(false)
  bannedReason       String?
  deactivated        Boolean @default(false)
  deleted            Boolean @default(false)
  createdAt          DateTime @default(now())
}